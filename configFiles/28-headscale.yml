apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: headplane-agent
  namespace: headplane
rules:
- apiGroups: ['']
  resources: ['pods']
  verbs: ['get', 'list', 'watch']
- apiGroups: ['apps']
  resources: ['deployments']
  verbs: ['get', 'list', 'watch']

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: headplane-serviceaccount
  namespace: headplane

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: headplane-agent
  namespace: headplane
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: headplane-agent
subjects:
- kind: ServiceAccount
  name: headplane-serviceaccount
  namespace: headplane

---

# Deployment Definition
apiVersion: apps/v1
kind: Deployment
metadata:
  name: headplane
  namespace: headplane
  labels:
    app: headplane
spec:
  replicas: 1
  selector:
    matchLabels:
      app: headplane
  template:
    metadata:
      labels:
        app: headplane
    spec:
      shareProcessNamespace: true
      serviceAccountName: headplane-serviceaccount
      containers:
      - name: headplane
        image: ghcr.io/tale/headplane:latest
        env:
        - name: COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: headplane-secrets
              key: COOKIE_SECRET
        - name: ROOT_API_KEY
          valueFrom:
            secretKeyRef:
              name: headplane-secrets
              key: ROOT_API_KEY
        - name: HEADSCALE_INTEGRATION
          value: 'kubernetes'
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: COOKIE_SECURE
          value: 'true'
        - name: HEADSCALE_URL
          value: 'https://headscale.pudim.xyz' # Replace with your headscale URL
        - name: HOST
          value: '0.0.0.0'
        - name: PORT
          value: '3000'

        volumeMounts:
        - name: headscale-config
          mountPath: /etc/headscale

      - name: headscale
        image: headscale/headscale:stable
        command: ["headscale", "serve"]
        env:
        - name: TZ
          value: 'America/Sao_Paulo'
        volumeMounts:
        - name: headscale-data
          mountPath: /var/lib/headscale
        - name: headscale-config
          mountPath: /etc/headscale

      volumes:
      - name: headscale-data
        hostPath:
          path: /home/renner/mount/archive/archive/special/k8s/headplane/data
      - name: headscale-config
        hostPath:
          path: /home/renner/mount/archive/archive/special/k8s/headplane/config

---

# Service Definition
apiVersion: v1
kind: Service
metadata:
  name: headplane
  namespace: headplane
spec:
  selector:
    app: headplane
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000


---

# Service Definition
apiVersion: v1
kind: Service
metadata:
  name: headscale
  namespace: headplane
spec:
  selector:
    app: headplane
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080

---

# Ingress Definition
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: headplane-ingress
  namespace: headplane
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod # Adjust for your certificate issuer
    traefik.ingress.kubernetes.io/router.middlewares: default-https-redirect@kubernetescrd
spec:
  ingressClassName: traefik # Replace if using a different ingress controller
  rules:
  - host: headplane.pudim.xyz # Replace with your desired hostname
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: headplane # Replace with the Service name for headplane
            port:
              number: 3000
  tls:
  - hosts:
    - headplane.pudim.xyz # Replace with your desired hostname
    secretName: headplane-tls # Ensure a matching TLS secret exists

---

# Ingress Definition
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: headscale-ingress
  namespace: headplane
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod # Adjust for your certificate issuer
    traefik.ingress.kubernetes.io/router.middlewares: default-https-redirect@kubernetescrd
spec:
  ingressClassName: traefik # Replace if using a different ingress controller
  rules:
  - host: headscale.pudim.xyz # Replace with your desired hostname
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: headscale 
            port:
              number: 8080
  tls:
  - hosts:
    - headscale.pudim.xyz # Replace with your desired hostname
    secretName: headscale-tls # Ensure a matching TLS secret exists
